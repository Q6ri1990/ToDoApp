/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication3;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Al-Sahli
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        hideValues();
        setNimbus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChangerFrame = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        Input1 = new javax.swing.JTextField();
        Input2 = new javax.swing.JTextField();
        Input3 = new javax.swing.JTextField();
        Input4 = new javax.swing.JTextField();
        Input5 = new javax.swing.JTextField();
        Input6 = new javax.swing.JTextField();
        Input7 = new javax.swing.JTextField();
        Input8 = new javax.swing.JTextField();
        Input9 = new javax.swing.JTextField();
        Input10 = new javax.swing.JTextField();
        Input11 = new javax.swing.JTextField();
        Input12 = new javax.swing.JTextField();
        Input13 = new javax.swing.JTextField();
        Input14 = new javax.swing.JTextField();
        Input15 = new javax.swing.JTextField();
        Input16 = new javax.swing.JTextField();
        Input17 = new javax.swing.JTextField();
        Input18 = new javax.swing.JTextField();
        Input19 = new javax.swing.JTextField();
        Input20 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        RndmButton = new javax.swing.JButton();
        OkButton = new javax.swing.JButton();
        ButtonPanel = new javax.swing.JPanel();
        AlgChooser = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        PrevButton = new javax.swing.JButton();
        NxtButton = new javax.swing.JButton();
        RestartButton = new javax.swing.JButton();
        StopButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        ChngButton = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        BBGLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AlgLabel = new javax.swing.JTextArea();
        AniPanel = new javax.swing.JPanel();
        jLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        HelpPanel = new javax.swing.JPanel();
        HelpLbl1 = new javax.swing.JLabel();
        HelpLbl2 = new javax.swing.JLabel();
        HelpLbl3 = new javax.swing.JLabel();
        HelpLbl4 = new javax.swing.JLabel();
        HelpLbl5 = new javax.swing.JLabel();
        HelpLbl6 = new javax.swing.JLabel();
        HelpLbl7 = new javax.swing.JLabel();
        HelpLbl8 = new javax.swing.JLabel();
        HelpLbl9 = new javax.swing.JLabel();
        HelpLbl10 = new javax.swing.JLabel();
        HelpLbl11 = new javax.swing.JLabel();
        HelpLbl12 = new javax.swing.JLabel();
        HelpLbl13 = new javax.swing.JLabel();
        HelpLbl14 = new javax.swing.JLabel();
        HelpLbl15 = new javax.swing.JLabel();
        HelpLbl16 = new javax.swing.JLabel();
        HelpLbl17 = new javax.swing.JLabel();
        HelpLbl18 = new javax.swing.JLabel();
        HelpLbl19 = new javax.swing.JLabel();
        HelpLbl20 = new javax.swing.JLabel();
        AniBGLbl = new javax.swing.JLabel();

        ChangerFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ChangerFrame.setTitle("Value Changer");
        ChangerFrame.setLocationByPlatform(true);
        ChangerFrame.setMinimumSize(new java.awt.Dimension(400, 170));

        jPanel1.setMaximumSize(new java.awt.Dimension(420, 180));
        jPanel1.setMinimumSize(new java.awt.Dimension(420, 180));
        jPanel1.setPreferredSize(new java.awt.Dimension(420, 180));

        jLabel21.setText("Array Size");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel22.setText("Array=");

        Input1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Input_Changed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel23.setText("}");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel24.setText("{");

        RndmButton.setText("Random");
        RndmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RndmButtonActionPerformed(evt);
            }
        });

        OkButton.setText("OK");
        OkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RndmButton)
                        .addGap(18, 18, 18)
                        .addComponent(OkButton)))
                .addContainerGap(138, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Input11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(Input12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Input1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(Input2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Input10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(55, Short.MAX_VALUE)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel23, jLabel24});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RndmButton)
                    .addComponent(OkButton))
                .addGap(36, 36, 36)
                .addComponent(jLabel22)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(46, 46, 46)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Input1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Input11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Input20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(26, Short.MAX_VALUE)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel23, jLabel24});

        javax.swing.GroupLayout ChangerFrameLayout = new javax.swing.GroupLayout(ChangerFrame.getContentPane());
        ChangerFrame.getContentPane().setLayout(ChangerFrameLayout);
        ChangerFrameLayout.setHorizontalGroup(
            ChangerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        ChangerFrameLayout.setVerticalGroup(
            ChangerFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sorting Algorithms");
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(0, 0, 0));
        setLocationByPlatform(true);
        setResizable(false);

        ButtonPanel.setDoubleBuffered(false);
        ButtonPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AlgChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bubble Sort", "Insertion Sort","Merge Sort", "Quick Sort", "Selection Sort" }));
        AlgChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlgChooserActionPerformed(evt);
            }
        });
        ButtonPanel.add(AlgChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 12, 146, -1));
        AlgChooser.getAccessibleContext().setAccessibleName("AlgChooser");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Algorithm");
        ButtonPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, 57, -1));

        PrevButton.setText("Previous");
        PrevButton.setEnabled(false);
        PrevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrevButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(PrevButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, -1, -1));

        NxtButton.setText("Next");
        NxtButton.setEnabled(false);
        NxtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NxtButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(NxtButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 60, -1, -1));

        RestartButton.setText("Start");
        RestartButton.setEnabled(false);
        RestartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestartButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(RestartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 60, -1, -1));

        StopButton.setText("Stop");
        StopButton.setEnabled(false);
        StopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(StopButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));

        ResetButton.setText("Reset");
        ResetButton.setAutoscrolls(true);
        ResetButton.setEnabled(false);
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(ResetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 11, -1, -1));

        ChngButton.setText("Set Values");
        ChngButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChngButtonActionPerformed(evt);
            }
        });
        ButtonPanel.add(ChngButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 11, -1, -1));

        jSlider1.setBackground(new java.awt.Color(48, 45, 45));
        jSlider1.setMinimum(10);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setToolTipText("Adjust Speed");
        jSlider1.setValue(55);
        jSlider1.setInverted(true);
        jSlider1.setValueIsAdjusting(true);
        jSlider1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jSlider1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jSlider1MouseExited(evt);
            }
        });
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        ButtonPanel.add(jSlider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 60, 111, 19));
        jSlider1.getAccessibleContext().setAccessibleName("Adjust Speed");
        jSlider1.getAccessibleContext().setAccessibleDescription("");

        BBGLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication3/d_bground.PNG"))); // NOI18N
        ButtonPanel.add(BBGLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 100));

        AlgLabel.setColumns(20);
        AlgLabel.setLineWrap(true);
        AlgLabel.setRows(5);
        AlgLabel.setText("Hello,\n\nThank you for using my \napplication, I hope that it \nwill help you in your studies.\n\nHow To Run the Application:\n1.Click On \"Set Values\".\n\n2.Choose The Algorithm you wantfrom the dropdown menu.\n\n3.Press Start to start the\nAnimation.\n\nOther Buttons:\n\"Reset\": resets the values of\nthe Array.\n\"Stop\": stops the animation.\n\"The Slider\": adjusts the speed\nof the animation.");
        AlgLabel.setWrapStyleWord(true);
        jScrollPane1.setViewportView(AlgLabel);

        AniPanel.setDoubleBuffered(false);
        AniPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel.setForeground(new java.awt.Color(255, 255, 255));
        jLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel.setText(" 1");
        jLabel.setAutoscrolls(true);
        jLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel.setDoubleBuffered(true);
        AniPanel.add(jLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 132, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(" 2");
        jLabel2.setAutoscrolls(true);
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel2.setDoubleBuffered(true);
        AniPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 132, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(" 3");
        jLabel3.setAutoscrolls(true);
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel3.setDoubleBuffered(true);
        AniPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 132, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(" 4");
        jLabel4.setAutoscrolls(true);
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel4.setDoubleBuffered(true);
        AniPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 132, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(" 5");
        jLabel5.setAlignmentX(2.0F);
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel5.setDoubleBuffered(true);
        jLabel5.setIconTextGap(1);
        AniPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 132, -1, -1));
        jLabel5.getAccessibleContext().setAccessibleName("5");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(" 6");
        jLabel6.setAutoscrolls(true);
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel6.setDoubleBuffered(true);
        AniPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 132, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(" 7");
        jLabel7.setAutoscrolls(true);
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel7.setDoubleBuffered(true);
        AniPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 132, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText(" 8");
        jLabel8.setAutoscrolls(true);
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 132, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(" 9");
        jLabel9.setAutoscrolls(true);
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 132, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("10");
        jLabel10.setAutoscrolls(true);
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 132, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("11");
        jLabel11.setAutoscrolls(true);
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 132, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("12");
        jLabel12.setAutoscrolls(true);
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 132, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("13");
        jLabel13.setAutoscrolls(true);
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 132, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("14");
        jLabel14.setAutoscrolls(true);
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 132, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("15");
        jLabel15.setAutoscrolls(true);
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 132, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("16");
        jLabel16.setAutoscrolls(true);
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 132, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("17");
        jLabel17.setAutoscrolls(true);
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 132, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("18");
        jLabel18.setAutoscrolls(true);
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 132, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("19");
        jLabel19.setAutoscrolls(true);
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AniPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(478, 132, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("20");
        jLabel20.setAutoscrolls(true);
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        lblArray = new JLabel[AniPanel.getComponentCount()-1];
        for (int i=0; i<AniPanel.getComponentCount() - 2;i++)
        {
            lblArray[i]= (JLabel) AniPanel.getComponent(i);
            lblArray[i].setVisible(false);
        }
        AniPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(504, 132, -1, -1));

        HelpPanel.setOpaque(false);

        HelpLbl1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl1.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HelpLbl1.setText(" 1");
        HelpLbl1.setAutoscrolls(true);
        HelpLbl1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HelpLbl1.setDoubleBuffered(true);

        HelpLbl2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl2.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl2.setText(" 2");
        HelpLbl2.setAutoscrolls(true);
        HelpLbl2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HelpLbl2.setDoubleBuffered(true);

        HelpLbl3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl3.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl3.setText(" 3");
        HelpLbl3.setAutoscrolls(true);
        HelpLbl3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HelpLbl3.setDoubleBuffered(true);

        HelpLbl4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl4.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl4.setText(" 4");
        HelpLbl4.setAutoscrolls(true);
        HelpLbl4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HelpLbl4.setDoubleBuffered(true);

        HelpLbl5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl5.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl5.setText(" 5");
        HelpLbl5.setAutoscrolls(true);
        HelpLbl5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HelpLbl5.setDoubleBuffered(true);

        HelpLbl6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl6.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl6.setText(" 6");
        HelpLbl6.setAutoscrolls(true);
        HelpLbl6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HelpLbl6.setDoubleBuffered(true);

        HelpLbl7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl7.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl7.setText(" 7");
        HelpLbl7.setAutoscrolls(true);
        HelpLbl7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        HelpLbl7.setDoubleBuffered(true);

        HelpLbl8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl8.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl8.setText(" 8");
        HelpLbl8.setAutoscrolls(true);
        HelpLbl8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl9.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl9.setText(" 9");
        HelpLbl9.setAutoscrolls(true);
        HelpLbl9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl10.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl10.setText("10");
        HelpLbl10.setAutoscrolls(true);
        HelpLbl10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl11.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl11.setText("11");
        HelpLbl11.setAutoscrolls(true);
        HelpLbl11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl12.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl12.setText("12");
        HelpLbl12.setAutoscrolls(true);
        HelpLbl12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl13.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl13.setText("13");
        HelpLbl13.setAutoscrolls(true);
        HelpLbl13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl14.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl14.setText("14");
        HelpLbl14.setAutoscrolls(true);
        HelpLbl14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl15.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl15.setText("15");
        HelpLbl15.setAutoscrolls(true);
        HelpLbl15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl16.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl16.setText("16");
        HelpLbl16.setAutoscrolls(true);
        HelpLbl16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl17.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl17.setText("17");
        HelpLbl17.setAutoscrolls(true);
        HelpLbl17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl18.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl18.setText("18");
        HelpLbl18.setAutoscrolls(true);
        HelpLbl18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl19.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl19.setText("19");
        HelpLbl19.setAutoscrolls(true);
        HelpLbl19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HelpLbl20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HelpLbl20.setForeground(new java.awt.Color(255, 255, 255));
        HelpLbl20.setText("20");
        HelpLbl20.setAutoscrolls(true);
        HelpLbl20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        lblArray = new JLabel[AniPanel.getComponentCount()+1];
        for (int i=0; i<AniPanel.getComponentCount();i++)
        {
            lblArray[i]= (JLabel) AniPanel.getComponent(i);
            lblArray[i].setVisible(false);
        }

        javax.swing.GroupLayout HelpPanelLayout = new javax.swing.GroupLayout(HelpPanel);
        HelpPanel.setLayout(HelpPanelLayout);
        HelpPanelLayout.setHorizontalGroup(
            HelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
            .addGroup(HelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(HelpPanelLayout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(HelpLbl1)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl2)
                    .addGap(2, 2, 2)
                    .addComponent(HelpLbl3)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl4)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl5)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl6)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl7)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl8)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl9)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl10)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl11)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl12)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl13)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl14)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl15)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl16)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl17)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl18)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl19)
                    .addGap(6, 6, 6)
                    .addComponent(HelpLbl20)
                    .addGap(0, 3, Short.MAX_VALUE)))
        );
        HelpPanelLayout.setVerticalGroup(
            HelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(HelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(HelpPanelLayout.createSequentialGroup()
                    .addGap(0, 40, Short.MAX_VALUE)
                    .addGroup(HelpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(HelpLbl1)
                        .addComponent(HelpLbl2)
                        .addComponent(HelpLbl3)
                        .addComponent(HelpLbl4)
                        .addComponent(HelpLbl5)
                        .addComponent(HelpLbl6)
                        .addComponent(HelpLbl7)
                        .addComponent(HelpLbl8)
                        .addComponent(HelpLbl9)
                        .addComponent(HelpLbl10)
                        .addComponent(HelpLbl11)
                        .addComponent(HelpLbl12)
                        .addComponent(HelpLbl13)
                        .addComponent(HelpLbl14)
                        .addComponent(HelpLbl15)
                        .addComponent(HelpLbl16)
                        .addComponent(HelpLbl17)
                        .addComponent(HelpLbl18)
                        .addComponent(HelpLbl19)
                        .addComponent(HelpLbl20))
                    .addGap(0, 41, Short.MAX_VALUE)))
        );

        AniPanel.add(HelpPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 480, -1));

        AniBGLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication3/bground.png"))); // NOI18N
        AniPanel.add(AniBGLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 310));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AniPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(AniPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        AniPanel.setIgnoreRepaint(true);

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Input_Changed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Input_Changed
        // TODO add your handling code here:
        randomized=false;
    }//GEN-LAST:event_Input_Changed

    private void AlgChooserActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AlgChooserActionPerformed
        // TODO add your handling code here:
        RestartButton.setText("Start");
        Alg = AlgChooser.getSelectedItem().toString();
        if (numbers != null) {
            StartSolving();
        }

    }// GEN-LAST:event_AlgChooserActionPerformed

    private void RestartButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_RestartButtonActionPerformed
        // TODO add your handling code here:
        RestartButton.setText("Restart");
        stopAnimation();
        jSlider1.setValue(25);
        Alg = AlgChooser.getSelectedItem().toString();
        if (Alg.contains("Merge")) {
            JOptionPane.showMessageDialog(this, "Unfortuantely, due to this algorithm's nature, You can't pause, step through or rewind the animation. \nBut hopefully it will be implemented in the future");
            NxtButton.setEnabled(false);
            PrevButton.setEnabled(false);
            StopButton.setEnabled(true);
            a = new AnimThread(AniPanel, lblArray, this, AlgLabel);
            startAimation(a);
        } else {
            StartSolving();
            StopButton.setEnabled(true);
            NxtButton.setEnabled(true);
            PrevButton.setEnabled(true);
            n = new NewEngine(HM, Alg, this);
            startAimation(n);
        }

        RestartButton.setText("Start");
    }// GEN-LAST:event_RestartButtonActionPerformed

    private void PrevButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_PrevButtonActionPerformed
        // TODO add your handling code here:
        stopAnimation();

        if (HM.CanRewind()) {
            n = new NewEngine(HM, "Rewind", this);
            startAimation(n);
        } else {
            JOptionPane.showMessageDialog(this, "You Have Reached the First Step");
            PrevButton.setEnabled(false);
            NxtButton.setEnabled(true);
        }

    }// GEN-LAST:event_PrevButtonActionPerformed

    private void StopButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_StopButtonActionPerformed
        // TODO add your handling code here:
        stopAnimation();
        repaint();
    }// GEN-LAST:event_StopButtonActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
        stopAnimation();
        refreshDisplay();
    }// GEN-LAST:event_ResetButtonActionPerformed

    private void ChngButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ChngButtonActionPerformed
        // TODO add your handling code here:
        jComboBox1.setSelectedIndex(jComboBox1.getItemCount() - 1);
        ChangerFrame.setVisible(true);
    }// GEN-LAST:event_ChngButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        int s = Integer.parseInt(jComboBox1.getSelectedItem().toString().trim());
        jt = new JTextField[]{Input1, Input2, Input3, Input4, Input5, Input6,
            Input7, Input8, Input9, Input10, Input11, Input12, Input13,
            Input14, Input15, Input16, Input17, Input18, Input19, Input20};

        for (int i = 0; i < jt.length; i++) {
            jt[i].setVisible(false);

        }
        for (int i = 0; i < s; i++) {
            jt[i].setVisible(true);
        }
        // jt = jt1;

    }// GEN-LAST:event_jComboBox1ActionPerformed

    private void RndmButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_RndmButtonActionPerformed
        // TODO add your handling code here:
        int len = 0;
        java.util.Random rnd = new java.util.Random();
        len = rnd.nextInt(19);
        int[] a = new int[len + 1];
        for (int i = 0; i < len; i++) {
            a[i] = rnd.nextInt(20);
        }
        setNumbers(a);
        randomized = true;
    }// GEN-LAST:event_RndmButtonActionPerformed

    private void OkButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_OkButtonActionPerformed
        // TODO add your handling code here:
        if (!randomized) {
            int len = 0;
            for (int i = 0; i < jt.length; i++) {
                if (!jt[i].toString().isEmpty() && jt[i].isVisible()) {
                    len++;
                }
            }
            int[] a = null;
            if (len > 0) {
                a = new int[len];
                for (int i = 0; i < len; i++) {
                    if (!jt[i].getText().equals("")) {
                        a[i] = Integer.parseInt(jt[i].getText());
                    }
                }
                setNumbers(a);
            }
            for (int i=0;i<jt.length;i++)
            {
                jt[i].setText("");
            }
        }
        randomized = false;
        ChangerFrame.dispose();
    }// GEN-LAST:event_OkButtonActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        if (n != null && n.isAlive()) {
            n.setSleeper(jSlider1.getValue());
        } else if (a != null && a.isAlive()) {
            a.setSleeper(jSlider1.getValue());
        }

    }// GEN-LAST:event_jSlider1StateChanged

    private void NxtButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_NxtButtonActionPerformed
//        // TODO add your handling code here:
        stopAnimation();
        if (HM.CanContinue()) {
            States s = HM.NextStep();
            n = new NewEngine(s, Alg, this);
            startAimation(n);
        } else {
            JOptionPane.showMessageDialog(this, "Reached Final Step");
            NxtButton.setEnabled(false);
        }
        PrevButton.setEnabled(true);

    }// GEN-LAST:event_NxtButtonActionPerformed

    private void jSlider1MouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jSlider1MouseEntered
        // TODO add your handling code here:
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }// GEN-LAST:event_jSlider1MouseEntered

    private void jSlider1MouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jSlider1MouseExited
        // TODO add your handling code here:
        setCursor((java.awt.Cursor.getDefaultCursor()));
    }// GEN-LAST:event_jSlider1MouseExited

    public String setAlgPsuedoCode(String n) {
        String s = "";
        if (n.contains("Insertion")) {
            s = "Algorithm InsertionSort\n Inputs\t A: \t Array of Integers;\nReturns A: \tArray of Integers; \n Variables i,j,key:\t Integer;\n startAimation" + "\n \t for i:=1 to n-1 do \n \t key:=A[i];" + "\n \t j:=i; \n \n \t while j>0 and key<A[j-1]" + "\n\n\t A[j]:= A[j-1]; \n \t \t j=j-1 \n \t od \n \t" + "A[j]:= key; \n \t od \n End";
        }
        if (n.contains("Quick")) {
            s = "Algorithm QuickSort\n Inputs\t A: \t Array of Integers; L,R:Integers;\n Returns A: \tArray of Integers; \nVariables p:\t Integer;\n startAimation" + "\n \t if ( R > L) then \n \t p:= partition(A,L,R);" + "\n \t quicksort(A,L,p-1);" + "\n \t quicksort(A,p+1,R);" + "\n\t fi" + "\n End \n \n";
            s = s + "\n Algorithm partition\n Inputs\t A: \t Array of Integers; left,right:Integers;\n Returns pL : Integer;" + "\n Variables pL,pr,v::\t Integer;\n startAimation" + "\n \t v := A[right] \n \t pL:= left;  pR := right;" + "\n \t while ( pL < pR) do" + "\n \t \t while (A[pL] < v do pL:=pL+1 od;" + "\n \t \t while (A[pR] >= v  and pR>left do pR:=pR-1 od;" + "\n\t \t if (pL < pR) then swap(A,pL,pR) fi" + "\n \t od" + "\n \t swap(A,pL,right);" + "\n \t return pL;" + "\n End \n \n";
        }

        if (n.contains("Selection")) {
            s = "Algorithm SlectionSort\n Inputs\t A: \t Array of Integers; n:Integer\nReturns A: \tArray of Integers; \n Variables i,j,min:\t Integer;\n startAimation" + "\n \t for i:=1 to n-2 do \n \t min:=i;" + "\n \t for j:=i+1 to n-2 do\n \n \t if (A[j]<A[min] then min:=j; fi" + "\n\t od \n \t swap(A,i,min); \n \t od \n \t" + "\n End";
        }

        if (n.contains("Bubble")) {
            s = "Algorithm BubbleSort\n Inputs\t A: \t Array of Integers;\n Returns A: \tArray of Integers; \nVariables i,j,key:\t Integer;\n startAimation\n" + "for i:= to n-1 do\n" + "  for j:=0 to n-2 do\n" + "  \tif (A[j] > A[j + 1]) then\n" + "  \t swap(A,j,j+1); \n  \tfi \n\t od\t \n od \n End";
        }

        if (n.contains("Merge")) {
            s = "Algorithm: MergeSort\nInputs: n: Integer, A: Array of Integers\nReturns: A: Array of Integers\nVariables: \nstartAimation\n\n" + "split(0,n,A)\n\nEnd" + "\n\nAlgorithm: split\nInputs: start, n:Integer, A: Array of Integers\nReturns: A: Array of Integers\nVariables: ln,rn: Integers\nstartAimation\n" + "if (n>1) then\n\tln:= n/2\n\t" + "split(A, start,ln)\n\tsplit(A, start+ln, rn)\n\tmerge(start, ln, rn, A)\n" + "else\n\treturn A;\nfi\nEnd\n\n" + "Algorithm: merge\nInputs: start, ln,rn: Integers, A: Array of Integers\nReturns: A: Array of Integers\nVariables: i,lp,rp: Integers, tmp: Array of Integers\nstartAimation\n" + "lp:=0\nrp:=0\ni:=0;\ntmp:= new Array[ln+rn]\n\n" + "while(lp<ln && rp<rn) do\n\t" + "if (A[lp] <A[rp] then\n\t   tmp[i]:= a[lp]\n\t   lp++\n\t   i++\n\t" + "else\n\t   tmp[i]:= a[rp]\n\t   rp++\n\t   i++\n\t" + "fi\n\tod" + "\n\nwhile (lp<ln) do\n\t" + "tmp[i]:= a[lp]\n\tlp++\n\ti++\nod\n\t\n" + "while (rp<rn) do\n\ttmp[i]:= a[rp]\n\trp++\n\ti++\n" + "od\t\n\n" + "return tmp;\n" + "End";
        }

        return s;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    private void hideValues() {
        lblArray = new JLabel[AniPanel.getComponentCount()];
        for (int i = 0; i < AniPanel.getComponentCount() - 2; i++) {
            lblArray[i] = (JLabel) AniPanel.getComponent(i);
            lblArray[i].setVisible(false);
            HelpPanel.getComponent(i).setVisible(false);
        }
        HelpPanel.setVisible(false);
    }

    private void setNimbus() {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                try {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox AlgChooser;
    private javax.swing.JTextArea AlgLabel;
    private javax.swing.JLabel AniBGLbl;
    private javax.swing.JPanel AniPanel;
    private javax.swing.JLabel BBGLbl;
    private javax.swing.JPanel ButtonPanel;
    private javax.swing.JFrame ChangerFrame;
    private javax.swing.JButton ChngButton;
    private javax.swing.JLabel HelpLbl1;
    private javax.swing.JLabel HelpLbl10;
    private javax.swing.JLabel HelpLbl11;
    private javax.swing.JLabel HelpLbl12;
    private javax.swing.JLabel HelpLbl13;
    private javax.swing.JLabel HelpLbl14;
    private javax.swing.JLabel HelpLbl15;
    private javax.swing.JLabel HelpLbl16;
    private javax.swing.JLabel HelpLbl17;
    private javax.swing.JLabel HelpLbl18;
    private javax.swing.JLabel HelpLbl19;
    private javax.swing.JLabel HelpLbl2;
    private javax.swing.JLabel HelpLbl20;
    private javax.swing.JLabel HelpLbl3;
    private javax.swing.JLabel HelpLbl4;
    private javax.swing.JLabel HelpLbl5;
    private javax.swing.JLabel HelpLbl6;
    private javax.swing.JLabel HelpLbl7;
    private javax.swing.JLabel HelpLbl8;
    private javax.swing.JLabel HelpLbl9;
    public javax.swing.JPanel HelpPanel;
    private javax.swing.JTextField Input1;
    private javax.swing.JTextField Input10;
    private javax.swing.JTextField Input11;
    private javax.swing.JTextField Input12;
    private javax.swing.JTextField Input13;
    private javax.swing.JTextField Input14;
    private javax.swing.JTextField Input15;
    private javax.swing.JTextField Input16;
    private javax.swing.JTextField Input17;
    private javax.swing.JTextField Input18;
    private javax.swing.JTextField Input19;
    private javax.swing.JTextField Input2;
    private javax.swing.JTextField Input20;
    private javax.swing.JTextField Input3;
    private javax.swing.JTextField Input4;
    private javax.swing.JTextField Input5;
    private javax.swing.JTextField Input6;
    private javax.swing.JTextField Input7;
    private javax.swing.JTextField Input8;
    private javax.swing.JTextField Input9;
    private javax.swing.JButton NxtButton;
    private javax.swing.JButton OkButton;
    private javax.swing.JButton PrevButton;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton RestartButton;
    private javax.swing.JButton RndmButton;
    private javax.swing.JButton StopButton;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables
    private JLabel[] lblArray;
    private java.awt.Image dbImage;
    private java.awt.Graphics dbg;
    private NewEngine n;
    private AnimThread a;
    private String Alg = "Bubble Sort";
    private int[] backup, numbers;
    public HistoryManager HM = null;
    public JTextField[] jt;
    private boolean randomized = false;

    @Override
    public void update(java.awt.Graphics g) {
        int w = getWidth();
        int h = getHeight();
        if (dbImage == null) {
            dbImage = createImage(w, h);
            dbg = dbImage.getGraphics();
        }
        dbg.setColor(AniPanel.getBackground());
        dbg.fillRect(0, 0, w, h);
        dbg.setColor(AniPanel.getForeground());
        paint(dbg);
        g.drawImage(dbImage, 0, 0, AniPanel);
    }

    public void refreshDisplay() {
        hideValues();
        numbers = getNums();
        for (int i = 0; i < numbers.length; i++) {
            if (numbers[i] >= 10) {
                lblArray[i].setText("" + numbers[i]);
            } else {
                lblArray[i].setText(" " + numbers[i]);
            }
            lblArray[i].setVisible(true);
        }
        StopButton.setEnabled(false);
        PrevButton.setEnabled(false);
        ResetButton.setEnabled(true);
        RestartButton.setEnabled(true);
        NxtButton.setEnabled(true);
        StartSolving();
    }

    private void loadMemory() {
        if (HM == null) {
            HM = new HistoryManager();
        } else {
            HM.ClearHistory();
        }
        numbers = null;
        backup = null;
    }

    public void setNumbers(int[] a) {
        loadMemory();
        numbers = new int[a.length];
        System.arraycopy(a, 0, numbers, 0, a.length);
        backup = new int[a.length];
        System.arraycopy(a, 0, backup, 0, a.length);
        refreshDisplay();
        StartSolving();
    }

    public JTextArea getT() {
        return AlgLabel;
    }

    public void setAlg(String s) {
        s += " Sort";
        AlgChooser.setSelectedItem(s);
    }

    public int getSpeed() {
        return jSlider1.getValue();
    }

    public int[] getNums() {
        int[] t = new int[backup.length];
        System.arraycopy(backup, 0, numbers, 0, backup.length);
        System.arraycopy(numbers, 0, t, 0, numbers.length);
        return t;
    }

    public JPanel getAni() {
        return AniPanel;
    }

    public JLabel[] getLBL() {
        JLabel[] t = new JLabel[lblArray.length];
        System.arraycopy(lblArray, 0, t, 0, lblArray.length);
        return t;
    }

    private void startAimation(Thread t) {
        if (Alg.contains("Selection")) {
            AlgLabel.setText(setAlgPsuedoCode("Selection"));
        }
        if (Alg.contains("Bubble")) {
            AlgLabel.setText(setAlgPsuedoCode("Bubble"));
        }
        if (Alg.contains("Insertion")) {
            AlgLabel.setText(setAlgPsuedoCode("Insertion"));
        }
        if (Alg.contains("Merge")) {
            AlgLabel.setText(setAlgPsuedoCode("Merge"));
        }
        if (Alg.contains("Quick")) {
            AlgLabel.setText(setAlgPsuedoCode("Quick"));
        }
        t.start();
    }

    private void StartSolving() {
        HM.ClearHistory();
        HM.solveAlgorithm(Alg, getNums());
        HM.populateStates();
    }

    private void stopAnimation() {
        if (n != null && n.isAlive()) {
            n.makeItStop();
        } else if (a != null && a.isAlive()) {
            a.makeItStop();
        }
    }
}
